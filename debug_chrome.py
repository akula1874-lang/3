#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å Chrome –∏ ChromeDriver
–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è Windows
"""

import os
import sys
import time
import subprocess
import requests
import zipfile
from pathlib import Path

try:
    from selenium import webdriver
    from selenium.webdriver.chrome.options import Options
    from selenium.webdriver.chrome.service import Service
    from selenium.webdriver.common.by import By
    from selenium.webdriver.support.ui import WebDriverWait
    from selenium.webdriver.support import expected_conditions as EC
except ImportError:
    print("‚ùå Selenium –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: pip install selenium")
    sys.exit(1)


def test_chrome_installation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Chrome"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Chrome...")
    
    chrome_paths = [
        r"C:\Program Files\Google\Chrome\Application\chrome.exe",
        r"C:\Program Files (x86)\Google\Chrome\Application\chrome.exe",
        rf"C:\Users\{os.getenv('USERNAME', 'User')}\AppData\Local\Google\Chrome\Application\chrome.exe"
    ]
    
    for chrome_path in chrome_paths:
        if os.path.exists(chrome_path):
            print(f"‚úÖ Chrome –Ω–∞–π–¥–µ–Ω: {chrome_path}")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
            try:
                result = subprocess.run([chrome_path, '--version'], 
                                      capture_output=True, text=True, timeout=10)
                if result.returncode == 0:
                    version = result.stdout.strip()
                    print(f"üî¢ –í–µ—Ä—Å–∏—è: {version}")
                    return chrome_path, version
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é: {e}")
                
            return chrome_path, "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞"
    
    print("‚ùå Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return None, None


def test_chromedriver_basic():
    """–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç ChromeDriver"""
    print("\nüß™ –ë–ê–ó–û–í–´–ô –¢–ï–°–¢ CHROMEDRIVER")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥—Ä–∞–π–≤–µ—Ä
    driver_dir = Path("drivers")
    driver_paths = list(driver_dir.rglob("chromedriver.exe"))
    
    if not driver_paths:
        print("‚ùå ChromeDriver –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ drivers/")
        return False
    
    driver_path = str(driver_paths[0])
    print(f"üìÅ –ù–∞–π–¥–µ–Ω ChromeDriver: {driver_path}")
    
    # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    options = Options()
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    
    service = Service(driver_path)
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ Chrome...")
        driver = webdriver.Chrome(service=service, options=options)
        
        print("‚úÖ Chrome –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
        driver.get("https://www.google.com")
        print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ Google –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        
        time.sleep(2)
        driver.quit()
        print("‚úÖ Chrome –∑–∞–∫—Ä—ã—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def test_chromedriver_headless():
    """–¢–µ—Å—Ç ChromeDriver –≤ headless —Ä–µ–∂–∏–º–µ"""
    print("\nü§ñ –¢–ï–°–¢ HEADLESS –†–ï–ñ–ò–ú–ê")
    print("-" * 40)
    
    driver_dir = Path("drivers")
    driver_paths = list(driver_dir.rglob("chromedriver.exe"))
    
    if not driver_paths:
        print("‚ùå ChromeDriver –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    driver_path = str(driver_paths[0])
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è headless
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    options.add_argument("--window-size=1920,1080")
    
    service = Service(driver_path)
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ Chrome –≤ headless —Ä–µ–∂–∏–º–µ...")
        driver = webdriver.Chrome(service=service, options=options)
        
        print("‚úÖ Chrome –∑–∞–ø—É—â–µ–Ω –≤ headless —Ä–µ–∂–∏–º–µ")
        
        # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        driver.get("https://www.google.com")
        title = driver.title
        print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")
        
        driver.quit()
        print("‚úÖ Chrome –∑–∞–∫—Ä—ã—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ headless —Ä–µ–∂–∏–º–µ: {e}")
        return False


def test_tgstat_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ tgstat.ru"""
    print("\nüåê –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö TGSTAT.RU")
    print("-" * 40)
    
    driver_dir = Path("drivers")
    driver_paths = list(driver_dir.rglob("chromedriver.exe"))
    
    if not driver_paths:
        print("‚ùå ChromeDriver –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    driver_path = str(driver_paths[0])
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –∑–∞—â–∏—Ç—ã
    options = Options()
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    options.add_argument("--window-size=1920,1080")
    options.add_argument("--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36")
    options.add_experimental_option("excludeSwitches", ["enable-automation"])
    options.add_experimental_option('useAutomationExtension', False)
    
    service = Service(driver_path)
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ Chrome –¥–ª—è tgstat.ru...")
        driver = webdriver.Chrome(service=service, options=options)
        
        # –£–±–∏—Ä–∞–µ–º —Å–ª–µ–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
        driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => undefined})")
        
        print("üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ tgstat.ru...")
        driver.get("https://tgstat.ru")
        
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
        time.sleep(5)
        
        current_url = driver.current_url
        title = driver.title
        
        print(f"üîó –¢–µ–∫—É—â–∏–π URL: {current_url}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}")
        
        if "tgstat" in current_url.lower():
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ tgstat.ru")
            result = True
        else:
            print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –µ—Å—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç –∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞")
            result = False
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        try:
            screenshot_path = "debug_screenshot.png"
            driver.save_screenshot(screenshot_path)
            print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot_path}")
        except Exception:
            pass
        
        driver.quit()
        return result
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê CHROME + CHROMEDRIVER")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome
    chrome_path, chrome_version = test_chrome_installation()
    if not chrome_path:
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Chrome: https://www.google.com/chrome/")
        return
    
    # –¢–µ—Å—Ç 2: –ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç ChromeDriver
    basic_test = test_chromedriver_basic()
    
    # –¢–µ—Å—Ç 3: Headless —Ä–µ–∂–∏–º
    headless_test = test_chromedriver_headless()
    
    # –¢–µ—Å—Ç 4: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ tgstat.ru
    tgstat_test = test_tgstat_connection()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    tests = [
        ("Chrome —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", chrome_path is not None),
        ("–ë–∞–∑–æ–≤—ã–π ChromeDriver", basic_test),
        ("Headless —Ä–µ–∂–∏–º", headless_test),
        ("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ tgstat.ru", tgstat_test)
    ]
    
    passed = 0
    for test_name, result in tests:
        status = "‚úÖ" if result else "‚ùå"
        print(f"{status} {test_name}")
        if result:
            passed += 1
    
    print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{len(tests)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == len(tests):
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü–∞—Ä—Å–µ—Ä –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å.")
    elif basic_test:
        print("üí° –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.")
    else:
        print("üö® –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π Chrome/ChromeDriver.")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Chrome")
        print("   ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ Chrome –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏")
        print("   ‚Ä¢ –£–¥–∞–ª–∏—Ç–µ –ø–∞–ø–∫—É drivers/ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–∞—Ä—Å–µ—Ä –∑–∞–Ω–æ–≤–æ")


if __name__ == "__main__":
    main()