#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ TGStat.ru Parser –¥–ª—è Windows
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
import subprocess
import requests
import zipfile
from pathlib import Path


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    print("üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python...")
    version = sys.version_info
    
    if version >= (3, 7):
        print(f"‚úÖ Python {version.major}.{version.minor}.{version.micro} - OK")
        return True
    else:
        print(f"‚ùå Python {version.major}.{version.minor}.{version.micro} - –¢—Ä–µ–±—É–µ—Ç—Å—è 3.7+")
        print("üí° –°–∫–∞—á–∞–π—Ç–µ –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é: https://www.python.org/downloads/")
        return False


def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    requirements = ["selenium>=4.15.0", "requests>=2.31.0"]
    
    for package in requirements:
        try:
            print(f"üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {package}...")
            result = subprocess.run([
                sys.executable, "-m", "pip", "install", package
            ], capture_output=True, text=True)
            
            if result.returncode == 0:
                print(f"‚úÖ {package} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package}: {result.stderr}")
                return False
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package}: {e}")
            return False
    
    return True


def create_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    
    directories = ["results", "logs", "drivers"]
    
    for dir_name in directories:
        try:
            Path(dir_name).mkdir(exist_ok=True)
            print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {dir_name}/ —Å–æ–∑–¥–∞–Ω–∞")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è {dir_name}/: {e}")
            return False
    
    return True


def download_chromedriver():
    """–ó–∞–≥—Ä—É–∑–∫–∞ ChromeDriver"""
    print("\nüîß –ó–∞–≥—Ä—É–∑–∫–∞ ChromeDriver...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥—Ä–∞–π–≤–µ—Ä
    driver_dir = Path("drivers")
    existing_drivers = list(driver_dir.rglob("chromedriver.exe"))
    
    if existing_drivers:
        print(f"‚úÖ ChromeDriver —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {existing_drivers[0]}")
        return True
    
    # –°–ø–∏—Å–æ–∫ URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    download_urls = [
        "https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_win32.zip",
        "https://chromedriver.storage.googleapis.com/113.0.5672.63/chromedriver_win32.zip",
        "https://chromedriver.storage.googleapis.com/112.0.5615.49/chromedriver_win32.zip"
    ]
    
    for url in download_urls:
        try:
            print(f"üîó –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {url}")
            response = requests.get(url, stream=True, timeout=30)
            response.raise_for_status()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ö–∏–≤
            driver_zip = driver_dir / "chromedriver.zip"
            total_size = int(response.headers.get('content-length', 0))
            downloaded = 0
            
            with open(driver_zip, 'wb') as f:
                for chunk in response.iter_content(chunk_size=8192):
                    if chunk:
                        f.write(chunk)
                        downloaded += len(chunk)
                        if total_size > 0:
                            progress = (downloaded / total_size) * 100
                            print(f"\rüì• –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {progress:.1f}%", end='')
            
            print("\nüì¶ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—Ä—Ö–∏–≤
            with zipfile.ZipFile(driver_zip, 'r') as zip_ref:
                zip_ref.extractall(driver_dir)
            
            # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤
            driver_zip.unlink()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            driver_paths = list(driver_dir.rglob("chromedriver.exe"))
            if driver_paths:
                print(f"‚úÖ ChromeDriver –∑–∞–≥—Ä—É–∂–µ–Ω: {driver_paths[0]}")
                return True
            
        except Exception as e:
            print(f"\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å {url}: {e}")
            continue
    
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ChromeDriver")
    return False


def test_installation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    
    try:
        # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞
        import selenium
        import requests
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç ChromeDriver
        driver_dir = Path("drivers")
        driver_paths = list(driver_dir.rglob("chromedriver.exe"))
        
        if driver_paths:
            print(f"‚úÖ ChromeDriver –Ω–∞–π–¥–µ–Ω: {driver_paths[0]}")
        else:
            print("‚ùå ChromeDriver –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üöÄ –£–°–¢–ê–ù–û–í–ö–ê TGSTAT.RU PARSER")
    print("=" * 50)
    print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è Windows")
    print("=" * 50)
    
    steps = [
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ Python", check_python_version),
        ("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", install_dependencies),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π", create_directories),
        ("–ó–∞–≥—Ä—É–∑–∫–∞ ChromeDriver", download_chromedriver),
        ("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", test_installation)
    ]
    
    for step_name, step_func in steps:
        print(f"\n‚è≥ {step_name}...")
        
        try:
            if not step_func():
                print(f"\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ: {step_name}")
                print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –≤—ã—à–µ")
                return False
        except KeyboardInterrupt:
            print("\n‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            return False
        except Exception as e:
            print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ '{step_name}': {e}")
            return False
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 50)
    print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞ –≤–≤–µ–¥–∏—Ç–µ:")
    print("   python main.py")
    print("\nüß™ –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤–≤–µ–¥–∏—Ç–µ:")
    print("   python debug_chrome.py")
    print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
    print("   README_WINDOWS.md - –ø–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
    print("   –ò–ù–°–¢–†–£–ö–¶–ò–Ø_WINDOWS.md - –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ")
    print("   –ó–ê–ü–£–°–ö_–í_PYCHARM.md - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è PyCharm")
    
    return True


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –µ—â–µ —Ä–∞–∑")